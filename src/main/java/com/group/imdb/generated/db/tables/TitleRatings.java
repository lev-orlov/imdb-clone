/*
 * This file is generated by jOOQ.
 */
package com.group.imdb.generated.db.tables;


import com.group.imdb.generated.db.Indexes;
import com.group.imdb.generated.db.Keys;
import com.group.imdb.generated.db.Public;
import com.group.imdb.generated.db.tables.records.TitleRatingsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.11"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TitleRatings extends TableImpl<TitleRatingsRecord> {

    private static final long serialVersionUID = 593069055;

    /**
     * The reference instance of <code>public.title_ratings</code>
     */
    public static final TitleRatings TITLE_RATINGS = new TitleRatings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TitleRatingsRecord> getRecordType() {
        return TitleRatingsRecord.class;
    }

    /**
     * The column <code>public.title_ratings.tconst</code>.
     */
    public final TableField<TitleRatingsRecord, String> TCONST = createField("tconst", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_ratings.average_rating</code>.
     */
    public final TableField<TitleRatingsRecord, Double> AVERAGE_RATING = createField("average_rating", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.title_ratings.num_votes</code>.
     */
    public final TableField<TitleRatingsRecord, Integer> NUM_VOTES = createField("num_votes", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.title_ratings</code> table reference
     */
    public TitleRatings() {
        this(DSL.name("title_ratings"), null);
    }

    /**
     * Create an aliased <code>public.title_ratings</code> table reference
     */
    public TitleRatings(String alias) {
        this(DSL.name(alias), TITLE_RATINGS);
    }

    /**
     * Create an aliased <code>public.title_ratings</code> table reference
     */
    public TitleRatings(Name alias) {
        this(alias, TITLE_RATINGS);
    }

    private TitleRatings(Name alias, Table<TitleRatingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TitleRatings(Name alias, Table<TitleRatingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TitleRatings(Table<O> child, ForeignKey<O, TitleRatingsRecord> key) {
        super(child, key, TITLE_RATINGS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TITLE_RATINGS_NUM_VOTES_AVERAGE_RATING_TCONST_INDEX, Indexes.TITLE_RATINGS_TCONST_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TitleRatingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TitleRatingsRecord, ?>>asList(Keys.TITLE_RATINGS__TITLE_RATINGS_TITLE_BASICS_TCONST_FK);
    }

    public TitleBasics titleBasics() {
        return new TitleBasics(this, Keys.TITLE_RATINGS__TITLE_RATINGS_TITLE_BASICS_TCONST_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TitleRatings as(String alias) {
        return new TitleRatings(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TitleRatings as(Name alias) {
        return new TitleRatings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TitleRatings rename(String name) {
        return new TitleRatings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TitleRatings rename(Name name) {
        return new TitleRatings(name, null);
    }
}
