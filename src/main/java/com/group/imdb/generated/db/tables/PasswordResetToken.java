/*
 * This file is generated by jOOQ.
 */
package com.group.imdb.generated.db.tables;


import com.group.imdb.generated.db.Indexes;
import com.group.imdb.generated.db.Keys;
import com.group.imdb.generated.db.Public;
import com.group.imdb.generated.db.tables.records.PasswordResetTokenRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.11"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PasswordResetToken extends TableImpl<PasswordResetTokenRecord> {

    private static final long serialVersionUID = 1437675222;

    /**
     * The reference instance of <code>public.password_reset_token</code>
     */
    public static final PasswordResetToken PASSWORD_RESET_TOKEN = new PasswordResetToken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PasswordResetTokenRecord> getRecordType() {
        return PasswordResetTokenRecord.class;
    }

    /**
     * The column <code>public.password_reset_token.id</code>.
     */
    public final TableField<PasswordResetTokenRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.password_reset_token.expiry_date</code>.
     */
    public final TableField<PasswordResetTokenRecord, Timestamp> EXPIRY_DATE = createField("expiry_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.password_reset_token.token</code>.
     */
    public final TableField<PasswordResetTokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.password_reset_token.user_id</code>.
     */
    public final TableField<PasswordResetTokenRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.password_reset_token</code> table reference
     */
    public PasswordResetToken() {
        this(DSL.name("password_reset_token"), null);
    }

    /**
     * Create an aliased <code>public.password_reset_token</code> table reference
     */
    public PasswordResetToken(String alias) {
        this(DSL.name(alias), PASSWORD_RESET_TOKEN);
    }

    /**
     * Create an aliased <code>public.password_reset_token</code> table reference
     */
    public PasswordResetToken(Name alias) {
        this(alias, PASSWORD_RESET_TOKEN);
    }

    private PasswordResetToken(Name alias, Table<PasswordResetTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private PasswordResetToken(Name alias, Table<PasswordResetTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PasswordResetToken(Table<O> child, ForeignKey<O, PasswordResetTokenRecord> key) {
        super(child, key, PASSWORD_RESET_TOKEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PASSWORD_RESET_TOKEN_PKEY, Indexes.UK_G0GUO4K8KRGPWUAGOS61OC06J);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PasswordResetTokenRecord> getPrimaryKey() {
        return Keys.PASSWORD_RESET_TOKEN_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PasswordResetTokenRecord>> getKeys() {
        return Arrays.<UniqueKey<PasswordResetTokenRecord>>asList(Keys.PASSWORD_RESET_TOKEN_PKEY, Keys.UK_G0GUO4K8KRGPWUAGOS61OC06J);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PasswordResetTokenRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PasswordResetTokenRecord, ?>>asList(Keys.PASSWORD_RESET_TOKEN__FKNS9Q9F0F318UAOXIQN6LKA9UX);
    }

    public UserAccount userAccount() {
        return new UserAccount(this, Keys.PASSWORD_RESET_TOKEN__FKNS9Q9F0F318UAOXIQN6LKA9UX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetToken as(String alias) {
        return new PasswordResetToken(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetToken as(Name alias) {
        return new PasswordResetToken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PasswordResetToken rename(String name) {
        return new PasswordResetToken(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PasswordResetToken rename(Name name) {
        return new PasswordResetToken(name, null);
    }
}
