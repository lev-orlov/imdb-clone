/*
 * This file is generated by jOOQ.
 */
package com.group.imdb.generated.db.tables;


import com.group.imdb.generated.db.Indexes;
import com.group.imdb.generated.db.Public;
import com.group.imdb.generated.db.tables.records.TitlePrincipalsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.11"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TitlePrincipals extends TableImpl<TitlePrincipalsRecord> {

    private static final long serialVersionUID = 788746585;

    /**
     * The reference instance of <code>public.title_principals</code>
     */
    public static final TitlePrincipals TITLE_PRINCIPALS = new TitlePrincipals();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TitlePrincipalsRecord> getRecordType() {
        return TitlePrincipalsRecord.class;
    }

    /**
     * The column <code>public.title_principals.tconst</code>.
     */
    public final TableField<TitlePrincipalsRecord, String> TCONST = createField("tconst", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_principals.ordering</code>.
     */
    public final TableField<TitlePrincipalsRecord, Integer> ORDERING = createField("ordering", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.title_principals.nconst</code>.
     */
    public final TableField<TitlePrincipalsRecord, String> NCONST = createField("nconst", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_principals.category</code>.
     */
    public final TableField<TitlePrincipalsRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_principals.job</code>.
     */
    public final TableField<TitlePrincipalsRecord, String> JOB = createField("job", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_principals.characters</code>.
     */
    public final TableField<TitlePrincipalsRecord, String> CHARACTERS = createField("characters", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.title_principals</code> table reference
     */
    public TitlePrincipals() {
        this(DSL.name("title_principals"), null);
    }

    /**
     * Create an aliased <code>public.title_principals</code> table reference
     */
    public TitlePrincipals(String alias) {
        this(DSL.name(alias), TITLE_PRINCIPALS);
    }

    /**
     * Create an aliased <code>public.title_principals</code> table reference
     */
    public TitlePrincipals(Name alias) {
        this(alias, TITLE_PRINCIPALS);
    }

    private TitlePrincipals(Name alias, Table<TitlePrincipalsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TitlePrincipals(Name alias, Table<TitlePrincipalsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TitlePrincipals(Table<O> child, ForeignKey<O, TitlePrincipalsRecord> key) {
        super(child, key, TITLE_PRINCIPALS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TITLE_PRINCIPALS_NCONST_INDEX, Indexes.TITLE_PRINCIPALS_TCONST_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TitlePrincipals as(String alias) {
        return new TitlePrincipals(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TitlePrincipals as(Name alias) {
        return new TitlePrincipals(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TitlePrincipals rename(String name) {
        return new TitlePrincipals(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TitlePrincipals rename(Name name) {
        return new TitlePrincipals(name, null);
    }
}
