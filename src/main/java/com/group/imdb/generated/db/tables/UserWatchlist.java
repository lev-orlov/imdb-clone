/*
 * This file is generated by jOOQ.
 */
package com.group.imdb.generated.db.tables;


import com.group.imdb.generated.db.Indexes;
import com.group.imdb.generated.db.Keys;
import com.group.imdb.generated.db.Public;
import com.group.imdb.generated.db.tables.records.UserWatchlistRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.11"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserWatchlist extends TableImpl<UserWatchlistRecord> {

    private static final long serialVersionUID = 1240413418;

    /**
     * The reference instance of <code>public.user_watchlist</code>
     */
    public static final UserWatchlist USER_WATCHLIST = new UserWatchlist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserWatchlistRecord> getRecordType() {
        return UserWatchlistRecord.class;
    }

    /**
     * The column <code>public.user_watchlist.title_id</code>.
     */
    public final TableField<UserWatchlistRecord, String> TITLE_ID = createField("title_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.user_watchlist.user_id</code>.
     */
    public final TableField<UserWatchlistRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.user_watchlist.watched</code>.
     */
    public final TableField<UserWatchlistRecord, Boolean> WATCHED = createField("watched", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>public.user_watchlist</code> table reference
     */
    public UserWatchlist() {
        this(DSL.name("user_watchlist"), null);
    }

    /**
     * Create an aliased <code>public.user_watchlist</code> table reference
     */
    public UserWatchlist(String alias) {
        this(DSL.name(alias), USER_WATCHLIST);
    }

    /**
     * Create an aliased <code>public.user_watchlist</code> table reference
     */
    public UserWatchlist(Name alias) {
        this(alias, USER_WATCHLIST);
    }

    private UserWatchlist(Name alias, Table<UserWatchlistRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserWatchlist(Name alias, Table<UserWatchlistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserWatchlist(Table<O> child, ForeignKey<O, UserWatchlistRecord> key) {
        super(child, key, USER_WATCHLIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_WATCHLIST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserWatchlistRecord> getPrimaryKey() {
        return Keys.USER_WATCHLIST_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserWatchlistRecord>> getKeys() {
        return Arrays.<UniqueKey<UserWatchlistRecord>>asList(Keys.USER_WATCHLIST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserWatchlistRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserWatchlistRecord, ?>>asList(Keys.USER_WATCHLIST__FK9VCLDKKC9X334ANSVBUUR8OG7, Keys.USER_WATCHLIST__FKQNUWA9S0V864VFHGGF79AR3QY);
    }

    public Title title() {
        return new Title(this, Keys.USER_WATCHLIST__FK9VCLDKKC9X334ANSVBUUR8OG7);
    }

    public UserAccount userAccount() {
        return new UserAccount(this, Keys.USER_WATCHLIST__FKQNUWA9S0V864VFHGGF79AR3QY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserWatchlist as(String alias) {
        return new UserWatchlist(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserWatchlist as(Name alias) {
        return new UserWatchlist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserWatchlist rename(String name) {
        return new UserWatchlist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserWatchlist rename(Name name) {
        return new UserWatchlist(name, null);
    }
}
