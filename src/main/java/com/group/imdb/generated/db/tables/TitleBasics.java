/*
 * This file is generated by jOOQ.
 */
package com.group.imdb.generated.db.tables;


import com.group.imdb.generated.db.Indexes;
import com.group.imdb.generated.db.Keys;
import com.group.imdb.generated.db.Public;
import com.group.imdb.generated.db.tables.records.TitleBasicsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.11"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TitleBasics extends TableImpl<TitleBasicsRecord> {

    private static final long serialVersionUID = 17537430;

    /**
     * The reference instance of <code>public.title_basics</code>
     */
    public static final TitleBasics TITLE_BASICS = new TitleBasics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TitleBasicsRecord> getRecordType() {
        return TitleBasicsRecord.class;
    }

    /**
     * The column <code>public.title_basics.tconst</code>.
     */
    public final TableField<TitleBasicsRecord, String> TCONST = createField("tconst", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.title_basics.title_type</code>.
     */
    public final TableField<TitleBasicsRecord, String> TITLE_TYPE = createField("title_type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_basics.primary_title</code>.
     */
    public final TableField<TitleBasicsRecord, String> PRIMARY_TITLE = createField("primary_title", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_basics.original_title</code>.
     */
    public final TableField<TitleBasicsRecord, String> ORIGINAL_TITLE = createField("original_title", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.title_basics.is_adult</code>.
     */
    public final TableField<TitleBasicsRecord, Boolean> IS_ADULT = createField("is_adult", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.title_basics.start_year</code>.
     */
    public final TableField<TitleBasicsRecord, Integer> START_YEAR = createField("start_year", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.title_basics.end_year</code>.
     */
    public final TableField<TitleBasicsRecord, Integer> END_YEAR = createField("end_year", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.title_basics.runtime_minutes</code>.
     */
    public final TableField<TitleBasicsRecord, Integer> RUNTIME_MINUTES = createField("runtime_minutes", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.title_basics.genres</code>.
     */
    public final TableField<TitleBasicsRecord, String[]> GENRES = createField("genres", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * Create a <code>public.title_basics</code> table reference
     */
    public TitleBasics() {
        this(DSL.name("title_basics"), null);
    }

    /**
     * Create an aliased <code>public.title_basics</code> table reference
     */
    public TitleBasics(String alias) {
        this(DSL.name(alias), TITLE_BASICS);
    }

    /**
     * Create an aliased <code>public.title_basics</code> table reference
     */
    public TitleBasics(Name alias) {
        this(alias, TITLE_BASICS);
    }

    private TitleBasics(Name alias, Table<TitleBasicsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TitleBasics(Name alias, Table<TitleBasicsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TitleBasics(Table<O> child, ForeignKey<O, TitleBasicsRecord> key) {
        super(child, key, TITLE_BASICS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_TITLE_IDX, Indexes.TITLE_BASICS_PK, Indexes.TRGM_GENRE_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TitleBasicsRecord> getPrimaryKey() {
        return Keys.TITLE_BASICS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TitleBasicsRecord>> getKeys() {
        return Arrays.<UniqueKey<TitleBasicsRecord>>asList(Keys.TITLE_BASICS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TitleBasics as(String alias) {
        return new TitleBasics(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TitleBasics as(Name alias) {
        return new TitleBasics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TitleBasics rename(String name) {
        return new TitleBasics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TitleBasics rename(Name name) {
        return new TitleBasics(name, null);
    }
}
