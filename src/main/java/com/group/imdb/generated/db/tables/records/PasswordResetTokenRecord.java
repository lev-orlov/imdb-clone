/*
 * This file is generated by jOOQ.
 */
package com.group.imdb.generated.db.tables.records;


import com.group.imdb.generated.db.tables.PasswordResetToken;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.11"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PasswordResetTokenRecord extends UpdatableRecordImpl<PasswordResetTokenRecord> implements Record4<Long, Timestamp, String, Long> {

    private static final long serialVersionUID = 1928673720;

    /**
     * Setter for <code>public.password_reset_token.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.password_reset_token.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.password_reset_token.expiry_date</code>.
     */
    public void setExpiryDate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.password_reset_token.expiry_date</code>.
     */
    public Timestamp getExpiryDate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>public.password_reset_token.token</code>.
     */
    public void setToken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.password_reset_token.token</code>.
     */
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.password_reset_token.user_id</code>.
     */
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.password_reset_token.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Timestamp, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Timestamp, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PasswordResetToken.PASSWORD_RESET_TOKEN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return PasswordResetToken.PASSWORD_RESET_TOKEN.EXPIRY_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PasswordResetToken.PASSWORD_RESET_TOKEN.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return PasswordResetToken.PASSWORD_RESET_TOKEN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getExpiryDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getExpiryDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetTokenRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetTokenRecord value2(Timestamp value) {
        setExpiryDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetTokenRecord value3(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetTokenRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResetTokenRecord values(Long value1, Timestamp value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PasswordResetTokenRecord
     */
    public PasswordResetTokenRecord() {
        super(PasswordResetToken.PASSWORD_RESET_TOKEN);
    }

    /**
     * Create a detached, initialised PasswordResetTokenRecord
     */
    public PasswordResetTokenRecord(Long id, Timestamp expiryDate, String token, Long userId) {
        super(PasswordResetToken.PASSWORD_RESET_TOKEN);

        set(0, id);
        set(1, expiryDate);
        set(2, token);
        set(3, userId);
    }
}
