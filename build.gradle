
buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath('org.jooq:jooq-codegen:3.11.11')
        classpath('org.postgresql:postgresql:42.2.5')
        classpath('com.moowork.gradle:gradle-node-plugin:1.3.1')
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.2.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'com.moowork.node'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.group'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    implementation('org.postgresql:postgresql')
    implementation('org.flywaydb:flyway-core:5.2.4')
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-jooq')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')

    runtimeOnly('org.springframework.boot:spring-boot-devtools')
}

task webpack(type: NpmTask) {
    args = ['run', 'build']
}


processResources.dependsOn 'webpack'

/*
task ('generate') << {
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.11.0.xsd') {
                jdbc() {
                    driver('org.postgresql.Driver')
                    url('jdbc:postgresql://localhost:5432/imdb')
                    user('postgres')
                    password('postgres')
                }
                generator() {
                    database() {
                        inputSchema('public')
                    }
                    generate() {
                    }
                    target() {
                        packageName('com.group.imdb.generated.db')
                        directory('src/main/java')
                    }
                }
            }
    org.jooq.codegen.GenerationTool.generate(writer.toString())
}
*/
